<project xmlns:asciidoctor="antlib:org.asciidoctor.ant">

  <get src="http://repo1.maven.org/maven2/org/asciidoctor/asciidoctor-ant/1.5.3/asciidoctor-ant-1.5.3.jar"
    dest="lib/asciidoctor-ant.jar" usetimestamp="true"/>

<!--  <get src="http://repo1.maven.org/maven2/org/asciidoctor/asciidoctorj-pdf/1.5.0-alpha.11/asciidoctorj-pdf-1.5.0-alpha.11.jar" dest="lib/asciidoctorj-pdf.jar" usetimestamp="true" /> -->

<!--  <get src="http://repo1.maven.org/maven2/org/asciidoctor/asciidoctorj/1.5.4.1/asciidoctorj-1.5.4.1.jar" dest="lib/asciidoctorj.jar" usetimestamp="true" /> -->


<!-- ======= Asciidoctor HTML conversion ========
   Uses pure Asciidoctor build task-->
  <target name="asciidoctor"
          description="Builds raw HTML versions of all '.adoc' files">
    <taskdef uri="antlib:org.asciidoctor.ant" resource="org/asciidoctor/ant/antlib.xml" classpath="lib/asciidoctor-ant.jar"/>
    <asciidoctor:convert
                 sourceDirectory="asciidoc"
                 outputDirectory="html"
                 backend="html5"
                 extensions="adoc"
                 sourceHighlighter="coderay"
                 embedAssets="true"
                 imagesDir="asciidoc/images">
      <attribute key="docinfo1" value='' />
      <attribute key="stylesheet" value="ref-guide.css" />
      <attribute key="stylesdir" value="html/styles" />
      <attribute key="icons" value="font" />
      <attribute key="figure-caption!" value='' />
      <attribute key="toc" value="right" />
   </asciidoctor:convert>
  </target>

<!-- ======= JBake Build =======
  Builds site with JBake. This (for now) assumes that JBake (http://jbake.org) is installed locally. -->

<property name="jbakesitedir" value="jbake-test/output"/>

   <target name ="jbake-clean"
           description="Cleans the JBake project by removing the 'output' directory">
     <delete dir="${jbakesitedir}"/>
   </target>

  <target name ="jbake-site"
          description="Builds the site using JBake">
     <exec executable="jbake" dir="jbake-test">
        <arg value="-b"/>
     </exec>
  </target>

<!-- ======= Jekyll Build =======
  Builds site with Jekyll. This (for now) assumes that Jekyll (http://jekyllrb.com) is installed locally.

  This section is borrowed from Ankyll (http://www.stuartgunter.org/ankyll/), an Ant script to build and publish Jekyll-based sites to Amazon S3. The S3 parts of the original have been removed. However, other portions to update Google & Bing sitemaps have been retained as examples of something we may want to integrate. -->

<!-- the Jekyll generated output directory -->
<property name="jekyllsitedir" value="_site/"/>

<!-- the encoded URL to your sitemap (for submitting to search engines) -->
<property name="sitemap" value="http%3A%2F%2Fwww.your-domain.com%2Fsitemap.xml"/>

<target name="jekyll-clean"
         description="Cleans the Jekyll project by removing the '_site' directory'">
  <delete dir="${jekyllsitedir}"/>
</target>

<target name="jekyll-site"
         description="Builds the site using Jekyll">
  <exec executable="jekyll" dir="jekylltest">
     <arg value="build"/>
  </exec>
</target>

<!-- This section would automatcially push the sitemap to Bing & Google -->
<!--
<target name="publish-sitemap"
         description="Publishes the sitemap to search engines (Google and Bing)">
  <exec executable="curl">
     <arg value="www.bing.com/webmaster/ping.aspx?siteMap=${sitemap}"/>
  </exec>

  <exec executable="curl">
     <arg value="www.google.com/webmasters/tools/ping?sitemap=${sitemap}"/>
  </exec>
</target> -->

<target name="jekyll-prepare"
         depends="jekyll-clean,jekyll-site"
         description="Prepares the site for deployment for local testing prior to deployment.">
</target>


<!-- ====== PDF Build ======= -->

<!-- Approach 1 - Build PDF with a shell script using the asciidoctor-pdf gem installed locally. -->
  <target name="pdf"
          description="Builds a PDF using local install of asciidoctor-pdf">
     <property name="executable-full-path"
            location="pdf/scripts/createPDF.sh"/>
     <exec executable="${executable-full-path}" />
  </target>

<!-- Approach 2 - Build PDF with asciidoctor-ant
     v1.5.3 includes asciidoctorj-pdf 1.5.0-alpha.11, which is the same as asciidoctor-pdf 1.5.0-alpha.11  -->
<!--  <property name="asciidoctor-ant.snapshot.jar" value="asciidoctor-ant-1.5.2-SNAPSHOT.jar"/> -->
  <property name="asciidoctor-ant.snapshot.jar" value="asciidoctor-ant.jar"/>

  <target name="pdf2"
          description="Builds a PDF using downloaded copy of asciidoctorj">
    <taskdef uri="antlib:org.asciidoctor.ant" resource="org/asciidoctor/ant/antlib.xml"
             classpath="lib/asciidoctor-ant.jar"/>
    <asciidoctor:convert
                 sourceDirectory="pdf"
                 sourceDocumentName="SolrRefGuide.adoc"
                 outputDirectory="pdf2"
                 backend="pdf"
                 extensions="adoc"
                 sourceHighlighter="coderay"
                 embedAssets="true"
                 imagesDir="asciidoc/images/"
                 doctype="book"
                 safemode="unsafe">
      <attribute key="icons" value="font" />
      <attribute key="icon-set" value="fa" />
      <attribute key="docinfo!" value='' />
      <attribute key="pdf-stylesDir" value="pdf/themes"/>
      <attribute key="pdf-style" value="refguide"/>
      <attribute key="pdf-fontsDir" value="pdf/fonts"/>
      <attribute key="pagenums" value='' />
      <attribute key="figure-caption!" value='' />
   </asciidoctor:convert>
  </target>

<!--  <condition property="asciidoctor-ant-built" value="true">
    <available file="lib/${asciidoctor-ant.snapshot.jar}"/>
</condition> -->

  <!-- Fetch and build asciidoctor-ant.  **With asciidoctor-ant 1.5.3 this can perhaps go away**

       The latest asciidoctor-ant release (1.5.1) has two problems that disallow conversion to PDF:

       1. It includes a buggy asciidoctorj-pdf dependency.
          See https://github.com/asciidoctor/asciidoctor-maven-examples/issues/11#issuecomment-112226507
       2. The "pdf" backend was added after the 1.5.1 release
   -->
   <!-- With asciidoctor-ant 1.5.3 this can perhaps go away
  <target name="build-asciidoctor-ant" unless="asciidoctor-ant-built">
    <delete dir="build/asciidoctor-ant" failonerror="false"/>
    <mkdir dir="build"/>
    <exec dir="build" executable="git" failonerror="true">
      <arg value="clone"/>
      <arg value="https://github.com/asciidoctor/asciidoctor-ant"/>
    </exec>

    <old comment: asciidoctorj-pdf-1.5.0-alpha.7 is missing a required font - upgrade to 1.5.0-alpha.9 >
    <replaceregexp file="build/asciidoctor-ant/pom.xml"
                   match="&lt;asciidoctorj-pdf.version&gt;1.5.0-alpha.7&lt;/asciidoctorj-pdf.version&gt;"
                   replace="&lt;asciidoctorj-pdf.version&gt;1.5.0-alpha.9&lt;/asciidoctorj-pdf.version&gt;"/>
    <exec dir="build/asciidoctor-ant" executable="mvn">
      <arg value="clean"/>
      <arg value="package"/>
    </exec>
    <copy todir="lib" file="build/asciidoctor-ant/target/${asciidoctor-ant.snapshot.jar}"
          failonerror="true" overwrite="true"/>
  </target>
  -->

</project>
