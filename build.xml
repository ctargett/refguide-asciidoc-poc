<project xmlns:asciidoctor="antlib:org.asciidoctor.ant">
  
  <!-- TODO: assume these come from common-build.xml -->
  <property name="version.base" value="6.2.42" />
  <tstamp>
    <format property="current.year" pattern="yyyy"/>
    <format property="DSTAMP" pattern="yyyy-MM-dd"/>
  </tstamp>

  <!-- properties to use in our docs -->
  <loadresource property="solr-docs-version">
    <propertyresource name="version.base"/>
    <filterchain>
      <tokenfilter>
        <filetokenizer/>
        <replaceregex pattern="^(\d+\.\d+)(|\..*)$" replace="\1" flags="s"/>
      </tokenfilter>
    </filterchain>
  </loadresource>
  <loadresource property="solr-docs-version-path">
    <propertyresource name="solr-docs-version"/>
    <filterchain>
      <tokenfilter>
        <filetokenizer/>
        <replaceregex pattern="^(\d+)\.(\d+)(|\..*)$" replace="\1_\2_0" flags="s"/>
      </tokenfilter>
    </filterchain>
  </loadresource>
  <property name="solr-javadocs" value="https://lucene.apache.org/solr/${solr-docs-version-path}/" />
  <property name="lucene-javadocs" value="https://lucene.apache.org/core/${solr-docs-version-path}/" />

  <mkdir dir="lib"/>
  <!-- asciidoctor-ant 1.5.3 includes asciidoctorj 1.5.3 and asciidoctorj-pdf 1.5.0-alpha.11, which is the same as asciidoctor-pdf 1.5.0-alpha.11 -->
  <property name="asciidoctor-ant.jar.path" location="lib/asciidoctor-ant.jar" />
  <get src="http://repo1.maven.org/maven2/org/asciidoctor/asciidoctor-ant/1.5.3/asciidoctor-ant-1.5.3.jar"
       dest="${asciidoctor-ant.jar.path}" usetimestamp="true"/>
  <property name="org-json.jar.path" location="lib/org-json.jar" />
  <get src="http://repo1.maven.org/maven2/org/json/json/20160810/json-20160810.jar"
       dest="${org-json.jar.path}" usetimestamp="true"/>

<!-- TODO: this should be same as what jekyll uses -->
<property name="asciidoc.dir" location="confluence-export/converted-asciidoc/" />
<property name="build.jekyll.dir" location="build/jekyll" />
<property name="main-page" value="apache-solr-reference-guide" />

<!-- ====== TOOLS FOR GENERATING/VALIDATING BITS OF THE SITE / PDF ======= -->
  <property name="jar"
            value="build/tools.jar"/>
  <path id="classpath">
    <pathelement location="${jar}"/>
    <pathelement location="${asciidoctor-ant.jar.path}"/>
    <pathelement location="${org-json.jar.path}"/>
  </path>

  <target name="clean">
    <delete dir="build"/>
  </target>

  <target name="jar">
    <mkdir dir="build/classes"/>
    <javac debug="yes"
           debuglevel="source,lines,vars"
           destdir="build/classes"
           includeantruntime="false">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="classpath"/>
      <src path="src/"/>
    </javac>
    <jar destfile="${jar}">
      <fileset dir="build/classes"
               includes="**/*.class"/>
    </jar>
  </target>
  
  <target name="build-init" description="Prepares the build dir">
    <delete dir="${build.jekyll.dir}" />
    <mkdir dir="${build.jekyll.dir}" />
    <echo>Copying all non adoc files from jekylltest ...</echo>
    <copy todir="${build.jekyll.dir}">
      <fileset dir="jekyll">
        <exclude name="**/*.adoc"/>
        <exclude name="**/*.template"/>
        <exclude name="_site/**"/>
      </fileset>
    </copy>
    <echo>Copy (w/prop replacement) any template files</echo>
    <copy todir="${build.jekyll.dir}">
      <fileset dir="jekyll">
        <include name="**/*.template"/>
      </fileset>
      <mapper type="glob" from="*.template" to="*"/>
      <filterchain>
        <expandproperties/>
      </filterchain>
    </copy>
    <echo>Copying all source files from converted-asciidoc ...</echo>
    <copy todir="${build.jekyll.dir}" overwrite="true">
      <fileset dir="${asciidoc.dir}" />
    </copy>
    <echo>Moving images so we don't have to change _config.yml (I'm lazy)</echo> <!-- TODO: HACK -->
    <mkdir dir="${build.jekyll.dir}/refguide/images" />
    <move file="${build.jekyll.dir}/images" todir="${build.jekyll.dir}/refguide/images/" />
  </target>

  <target name="build-nav" depends="jar,build-init">
    <!-- TODO: for now, put these in _data since thats where sidebar.json lives
         but in final refguide, they should live in some tmp dir somewhere? outside of git?
    -->
    <mkdir dir="${asciidoc.dir}/_data"/>
    <delete file="${asciidoc.dir}/_data/pdf-main-body.adoc" />
    <delete file="${asciidoc.dir}/_data/sidebar.json" />
    <java classname="BuildNavAndPDFBody"
          failonerror="true"
          fork="true">
      <classpath refid="classpath"/>
      <arg value="${asciidoc.dir}"/>
      <arg value="${main-page}"/>
    </java>
  </target>

  <!-- ====== PDF Build ======= -->
  <!-- Build PDF with asciidoctor-ant
       v1.5.3 of asciidoctor-ant includes asciidoctorj-pdf 1.5.0-alpha.11, which is the same as asciidoctor-pdf 1.5.0-alpha.11  -->
  <target name="build-pdf"
          depends="build-nav"
          description="Builds a PDF against all converted-asciidoc files">
    <taskdef uri="antlib:org.asciidoctor.ant" resource="org/asciidoctor/ant/antlib.xml"
             classpath="lib/asciidoctor-ant.jar"/>
    <asciidoctor:convert
                 sourceDirectory="pdf"
                 sourceDocumentName="SolrRefGuide-all.adoc"
                 baseDir="confluence-export/converted-asciidoc/"
                 outputDirectory="build"
                 backend="pdf"
                 extensions="adoc"
                 sourceHighlighter="coderay"
                 embedAssets="true"
                 imagesDir="${asciidoc.dir}"
                 doctype="book"
                 safemode="unsafe">
      <attribute key="icons" value="font" />
      <attribute key="icon-set" value="fa" />
      <attribute key="docinfo!" value='' />
      <attribute key="pdf-stylesDir" value="../../pdf/themes"/>
      <attribute key="pdf-style" value="refguide"/>
      <attribute key="pdf-fontsDir" value="../../pdf/fonts"/>
      <attribute key="pagenums" value='' />
      <attribute key="figure-caption!" value='' />
      <!-- attributes used in adoc files -->
      <!-- NOTE: If you add any attributes here for use in adoc files, you almost certainly need to also add
           them to the _config.yml.template file for building the jekyll site as well
      -->
      <attribute key="solr-docs-version" value="${solr-docs-version}" />
      <attribute key="solr-javadocs" value="${solr-javadocs}" />
      <attribute key="lucene-javadocs" value="${lucene-javadocs}" />
      <attribute key="build-date" value="${DSTAMP}" />
      <attribute key="build-year" value="${current.year}" />
    </asciidoctor:convert>
    <echo>Finished Building ${basedir}/build/SolrRefGuide-all.pdf</echo>
  </target>

  <!-- ======= Jekyll Build =======
    Builds site with Jekyll. This (for now) assumes that Jekyll (http://jekyllrb.com) is installed locally. -->

  <target name="build-jekyll"
          depends="build-init,build-nav"
          description="Builds a Jekyll Site">
    <echo>Running Jekyll...</echo>
    <exec executable="jekyll" dir="${build.jekyll.dir}">
      <arg value="build"/>
    </exec>
    <echo>Ready to browse site: ${build.jekyll.dir}/_site/${main-page}.html</echo>
  </target>

  <target name="build"
          depends="build-pdf,build-jekyll">
    <echo>PDF: ${basedir}/build/SolrRefGuide-all.pdf</echo>
    <echo>SITE: ${build.jekyll.dir}/_site/${main-page}.html</echo>
  </target>

<!-- ==== Conversion ==== -->
  <target name="convert-raw-confluence-exports"
          description="Convenience target for running the one time conversion needed to build confluence-export/converted-asciidoc">
    <ant dir="confluence-export/conversion-tools/jsoup"
         target="scrape"
         inheritAll="false"
         useNativeBasedir="true" />
    <exec executable="confluence-export/conversion-tools/toAsciidoc.sh" />
  </target>




</project>
